
//---------------------------------------------------------------------------
//!	@file	FactoryTypeA.cpp
//!	@brief	FactoryTypeA
//---------------------------------------------------------------------------
#include "FactoryTypeB.h"
//===========================================================================
//! 防衛施設
//===========================================================================

//---------------------------------------------------------------------------
//! コンストラクタ
//---------------------------------------------------------------------------
FactoryTypeB ::FactoryTypeB()
{
    _type = TYPE::TYPE_B;

    par._hp     = 30;   // 耐久値
    par._atk    = 1;    // 攻撃力
    par._atkSpd = 20;   // 攻撃速度

    // 当たり判定用の変数
    _hit._hcPos   = VGet(_pos.x, _pos.y, _pos.z);   // 現在位置
    _hit._hcScale = 25;                             // サイズ

    // 攻撃用当たり判定用の変数
    _hitAtk._hcPos = VGet(_pos.x, _pos.y, _pos.z);   // 現在位置
    //_hitAtk._hcScale = 5;                              // サイズ
    //_hitAtk._hcSpace = 20;
    _hitAtk._hcScale = 30;   // サイズ
    _hitAtk._hcSpace = 0;

    _color = GetColor(0, 255, 0);
}

//---------------------------------------------------------------------------
//! デストラクタ
//---------------------------------------------------------------------------
FactoryTypeB ::~FactoryTypeB()
{
}

//---------------------------------------------------------------------------
//! 初期化
//---------------------------------------------------------------------------
bool FactoryTypeB::initialize()
{
    FactoryBase::initialize("data/Tower/tower.mqo", "data/Tower/towerTypeB.png");

    return true;
}

//---------------------------------------------------------------------------
//! 更新
//---------------------------------------------------------------------------
void FactoryTypeB::update()
{

    FactoryBase::update();
}
//---------------------------------------------------------------------------
//! 描画
//---------------------------------------------------------------------------
void FactoryTypeB::render()
{
    FactoryBase::render();
}

//---------------------------------------------------------------------------
//! 解放
//---------------------------------------------------------------------------
void FactoryTypeB::finalize()
{
    FactoryBase::finalize();
}
