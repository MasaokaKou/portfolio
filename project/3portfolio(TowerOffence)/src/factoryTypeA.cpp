
//---------------------------------------------------------------------------
//!	@file	FactoryTypeA.cpp
//!	@brief	FactoryTypeA
//---------------------------------------------------------------------------
#include "FactoryTypeA.h"
//===========================================================================
//! 防衛施設
//===========================================================================

//---------------------------------------------------------------------------
//! コンストラクタ
//---------------------------------------------------------------------------
FactoryTypeA ::FactoryTypeA()
{
    _type    = TYPE::TYPE_A;
    par._hp  = 40;   // 耐久値
    par._atk = 2;    // 攻撃力
    par._atkSpd = 60;   // 攻撃速度

    // 当たり判定用の変数
    _hit._hcPos   = VGet(_pos.x, _pos.y, _pos.z);   // 現在位置
    _hit._hcSpace = 0;
    _hit._hcScale = 15;   // サイズ

    // 攻撃用当たり判定用の変数
    _hitAtk._hcPos   = VGet(_pos.x, _pos.y, _pos.z);   // 現在位置
    _hitAtk._hcScale = 5;                              // サイズ
    _hitAtk._hcSpace = 8;

    _atk_size = 2;
    _color    = RED;
}

//---------------------------------------------------------------------------
//! デストラクタ
//---------------------------------------------------------------------------
FactoryTypeA ::~FactoryTypeA()
{
}

//---------------------------------------------------------------------------
//! 初期化
//---------------------------------------------------------------------------
bool FactoryTypeA::initialize()
{
    FactoryBase::initialize("data/Tower/tower.mqo", "data/Tower/towerTypeA.png");

    return true;
}

//---------------------------------------------------------------------------
//! 更新
//---------------------------------------------------------------------------
void FactoryTypeA::update()
{
    FactoryBase::update();
    FactoryBase::attackAnimTypeA();
}
//---------------------------------------------------------------------------
//! 描画
//---------------------------------------------------------------------------
void FactoryTypeA::render()
{
    FactoryBase::render();
}

//---------------------------------------------------------------------------
//! 解放
//---------------------------------------------------------------------------
void FactoryTypeA::finalize()
{
    FactoryBase::finalize();
}
