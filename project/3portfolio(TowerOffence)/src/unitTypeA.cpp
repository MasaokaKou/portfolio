//---------------------------------------------------------------------------
//!	@file	unitTypeA.cpp
//!	@brief	UnitTypeAの実装
//---------------------------------------------------------------------------
#include "unitTypeA.h"

//---------------------------------------------------------------------------
//! コンストラクタ
//---------------------------------------------------------------------------
UnitTypeA::UnitTypeA()
{
    // ユニットの種類
    _type = TYPE::TYPE_A;
    // _pos  = VGet(0, 0, 0);   // 位置座標
    //_size = 0.04f;   // 図形描画の際のサイズ

    _HP = 20;

    par._hp     = _HP;    // 耐久値
    par._atk    = 2;      // 攻撃力
    par._def    = 0;      // 耐久力
    par._movSpd = 0.3f;   // 進軍速度
    par._atkSpd = 120;    //攻撃速度(_atkSpd フレームに一度)

    // 当たり判定用の変数(索敵)
    _hit._hcPos   = VGet(_pos.x, _pos.y, _pos.z);   // 現在位置
    _hit._hcScale = 15;                             // サイズ
    _hit._hcSpace = 0;                              // 間隔

    // 当たり判定用の変数(攻撃)
    _hitAtk._hcPos = VGet(_pos.x, _pos.y, _pos.z);   // 現在位置
    //_hitAtk._hcScale = 2;                              // サイズ
    //_hitAtk._hcSpace = 200;
    _hitAtk._hcScale = 5;
    _hitAtk._hcSpace = 0;
}

//---------------------------------------------------------------------------
//! デストラクタ
//---------------------------------------------------------------------------
UnitTypeA::~UnitTypeA()
{
}

//---------------------------------------------------------------------------
//! 初期化
//---------------------------------------------------------------------------
bool UnitTypeA::initialize()
{
    UnitBase::initialize("data/Unit/Unit.mqo", "data/Unit/Unit.png");
    return true;
}
//---------------------------------------------------------------------------
//! 更新
//---------------------------------------------------------------------------
void UnitTypeA::update()
{
    UnitBase::update();
}
//---------------------------------------------------------------------------
//! 描画
//---------------------------------------------------------------------------
void UnitTypeA::render()
{
    UnitBase::render();
}

//---------------------------------------------------------------------------
//! 解放
//---------------------------------------------------------------------------
void UnitTypeA::finalize()
{
    UnitBase::finalize();
}
